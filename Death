local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local function getNearestPlayer()
    local localPlayer = Players.LocalPlayer
    local nearestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end

    return nearestPlayer
end

local nearestPlayer = getNearestPlayer()

if nearestPlayer then
    local localPlayer = Players.LocalPlayer
    local character = localPlayer.Character
    local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")

    if humanoidRootPart then
        local goal = {}
        goal.Position = nearestPlayer.Character.HumanoidRootPart.Position

        local tweenInfo = TweenInfo.new(
            2, -- Time it takes to reach the target
            Enum.EasingStyle.Linear, -- Easing style
            Enum.EasingDirection.Out -- Easing direction
        )

        local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
        
        tween.Completed:Connect(function()
            -- Fire the server with "Bomb" once the tween is complete
            ReplicatedStorage.RetroAbility:FireServer("Bomb")
            
            -- Stop any additional movement or tweens
            humanoidRootPart.Anchored = true
            wait(0.1)
            humanoidRootPart.Anchored = false
        end)

        tween:Play()
    else
        print("HumanoidRootPart not found.")
    end
else
    print("No nearby players found.")
end
